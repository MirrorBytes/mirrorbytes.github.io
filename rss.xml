<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Portfolio]]></title><description><![CDATA[Portfolio for MirrorBytes]]></description><link>http://127.0.0.1</link><generator>metalsmith-feed</generator><lastBuildDate>Sat, 17 Sep 2016 14:34:48 GMT</lastBuildDate><atom:link href="http://127.0.0.1/rss.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[Tutorials]]></title><description><![CDATA[<!DOCTYPE html><html lang=en><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><meta http-equiv=x-ua-compatible content="ie=edge"><title>Tutorials - Portfolio</title><link rel=icon href="data:;base64,iVBORw0KGgo="><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js></script><style type=text/css>.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace-inactive{display:none}.pace .pace-progress{width:100%;height:2px;top:0;right:100%;z-index:2000;position:fixed;background-color:#6495ed}</style><link rel=stylesheet type=text/css href=https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css><link rel=stylesheet href=../css/style.css></head><body><main id=app><input id=main-nav-toggle type=checkbox><label for=main-nav-toggle><span></span></label><nav id=main-nav><ul><li><a href=../ >⌂</a></li><li><a href=../tutorials/ class=active>Tutorials</a></li><li><a href=http://codepen.io/MirrorBytes/ >My CodePen</a></li><li><a href=https://github.com/MirrorBytes>My GitHub</a></li></ul></nav><div id=content><h3>Tutorials</h3><ul><li><a href=../tutorials/pure-css3-masonry-layout/ >Pure CSS3 Masonry Layout</a></li><li><a href=../tutorials/pure-css3-parallax-header/ >Pure CSS3 Parallax Header</a></li></ul></div><footer><nav id=footer-nav><ul><li><a href=../ >⌂</a></li><li><a href=../tutorials/ >Tutorials</a></li><li><a href=http://codepen.io/MirrorBytes/ >My CodePen</a></li><li><a href=https://github.com/MirrorBytes>My GitHub</a></li></ul></nav><div class=copyright>&copy;2016 MirrorBytes | All Rights Reserved</div></footer></main><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/page.js/1.7.1/page.min.js></script><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/axios/0.14.0/axios.min.js></script><script type=text/javascript src=../js/shared.js></script><script type=text/javascript src=../js/bundle.js></script></body></html>]]></description><link>http://127.0.0.1/tutorials</link><guid isPermaLink="true">http://127.0.0.1/tutorials</guid><pubDate>Mon, 12 Sep 2016 16:35:05 GMT</pubDate></item><item><title><![CDATA[Pure CSS3 Masonry Layout]]></title><description><![CDATA[<!DOCTYPE html><html lang=en><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><meta http-equiv=x-ua-compatible content="ie=edge"><title>Pure CSS3 Masonry Layout - Portfolio</title><link rel=icon href="data:;base64,iVBORw0KGgo="><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js></script><style type=text/css>.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace-inactive{display:none}.pace .pace-progress{width:100%;height:2px;top:0;right:100%;z-index:2000;position:fixed;background-color:#6495ed}</style><link rel=stylesheet type=text/css href=https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css><link rel=stylesheet href=../../css/style.css></head><body><main id=app><input id=main-nav-toggle type=checkbox><label for=main-nav-toggle><span></span></label><nav id=main-nav><ul><li><a href=../../ >⌂</a></li><li><a href=../../tutorials/ class=active>Tutorials</a></li><li><a href=http://codepen.io/MirrorBytes/ >My CodePen</a></li><li><a href=https://github.com/MirrorBytes>My GitHub</a></li></ul></nav><div id=content><h3>Pure CSS3 Masonry Layout</h3><div id=media><img class=ratio src=https://placehold.it/16x9><iframe src=https://www.youtube.com/embed/oKR5kwLP350 frameborder=0 allowfullscreen></iframe></div><p class=drop-cap>Just to explain this tutorial a bit more in detail, I&#39;m writing it up. With CSS3, interesting layouts such as this one can be created with little to no frustration. Trust me when I say this, it takes 19 lines of CSS to accomplish the Masonry layout. That&#39;s it!</p><p>I will also be showing you how to break the flow of the Masonry layout with Flexbox clusters. This small, yet effective, addition will allow for a more interesting design of the data you are presenting. It is definitely worth looking into, but it is not necessary for this tutorial. Here are the pages I referenced while making this tutorial:</p><ul><li><a href=https://css-tricks.com/snippets/css/a-guide-to-flexbox/ >A Complete Guide to Flexbox</a></li><li><a href=http://www.sketchingwithcss.com/samplechapter/cheatsheet.html>The Ultimate Flexbox Cheatsheet</a></li></ul><p>Time to move into the actual tutorial!</p><hr><p>For those of you that had not watched the video, or cannot, I shall state that the finished product of this tutorial is ready for production-level projects. It has an incredibly smooth animation that does not hinder performance in the slightest, and it will not induce any migraines!</p><h6 id=dependency->Dependency:</h6><ul><li><a href=https://necolas.github.io/normalize.css/ >Normalize</a></li></ul><h6 id=my-html5-setup->My HTML5 Setup:</h6><pre><code class=lang-html>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
        &lt;meta charset=&quot;UTF-8&quot; /&gt;
        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;
        &lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot; /&gt;

        &lt;title&gt;&lt;/title&gt;

        &lt;link rel=&quot;icon&quot; href=&quot;data:;base64,iVBORw0KGgo=&quot; /&gt;
    &lt;/head&gt;

    &lt;body&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre><h6 id=basic-css->Basic CSS:</h6><pre><code class=lang-css>&lt;style type=&quot;text/css&quot;&gt;
    *,
    *::before,
    *::after {
        -webkit-box-sizing:border-box;
        -moz-box-sizing:border-box;
        box-sizing:border-box;
    }

    html,
    body,
    body &gt; header,
    body &gt; section {
        height:100vh;

        position:relative;
    }

    * {
        margin:0;
        padding:0;
    }

    html { overflow:hidden; }
    body {
        overflow-x:hidden;
        overflow-y:auto;
    }
&lt;/style&gt;
</code></pre><p>First, throw that into the head. Second, I use this CSS setup in nearly every one of my projects. Without this setup, I have found that html and body don&#39;t play nicely together in several situations, considering html likes to do its own thing with overflow.</p><h6 id=initial-testing-markup->Initial Testing Markup:</h6><pre><code class=lang-html>&lt;article&gt;
    &lt;div class=&quot;inner&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;
&lt;/article&gt;
&lt;article&gt;
    &lt;div class=&quot;inner&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;
&lt;/article&gt;
&lt;article&gt;
    &lt;div class=&quot;inner&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation.&lt;/p&gt;
    &lt;/div&gt;
&lt;/article&gt;
</code></pre><p>This is just a very basic markup to get a general idea of how the layout works. Add more articles to see how the effect works with a longer page length. hrow this into the body and look over the remaining CSS.</p><pre><code class=lang-css>@supports (((-webkit-column-width: 17rem) or (-moz-column-width: 17rem) or (column-width: 17rem)) and ((-webkit-column-gap: 0.5rem) or (-moz-column-gap: 0.5rem) or (column-gap: 0.5rem))) {
    #masonry {
        -webkit-column-width:17rem;
        -moz-column-width:17rem;
        column-width:17rem;

        -webkit-column-gap:0.5rem;
        -moz-column-gap:0.5rem;
        column-gap:0.5rem;
    }
}

#masonry {
    width:100%;
}

#masonry &gt; article {
    width:100%;

    display:inline-block; // without this, the columns will flow into the next
}
</code></pre><p>Told you, only 19 lines of CSS for the effect to work. It&#39;s pretty self explanatory, there are no set amount of columns, just sizes and spacing. Let&#39;s change a block and add a couple to make it a little more attractive:</p><pre><code class=lang-css>#masonry {
    padding:1rem;

    width:100%;
}

#masonry &gt; article p { margin:0.25rem 0; } // we&#39;re adding this

article p { // adding this one as well
    padding:0.25rem;

    background-color:#EEE;
}
</code></pre><p>With a little bit of spacing and a splash of color, our product looks a little nicer.</p><p>That is it for the Masonry layout actually! Quite easy, right? If you&#39;d like to learn about the Flexbox clusters, keep reading!</p><hr><h4 id=time-for-flexbox-clusters>Time for Flexbox Clusters</h4><h6 id=cluster-markup->Cluster Markup:</h6><p>Replace the above initial markup with the following:</p><pre><code class=lang-html>&lt;article&gt; &lt;!-- Flexbox Cluster: column --&gt;
    &lt;div class=&quot;inner&quot;&gt;
        &lt;div class=&quot;flex-cluster&quot;&gt;
            &lt;div class=&quot;flex-content half column&quot;&gt;
                &lt;p class=&quot;flex-content&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
                quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
                consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
                cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
                proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&quot;flex-content half column&quot;&gt;
                &lt;p class=&quot;flex-content&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                tempor incididunt ut labore et dolore magna aliqua.&lt;/p&gt;
                &lt;p class=&quot;flex-content&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                tempor incididunt ut labore et dolore magna aliqua.&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/article&gt;
&lt;article&gt;
    &lt;div class=&quot;inner&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation.&lt;/p&gt;
    &lt;/div&gt;
&lt;/article&gt;
&lt;article&gt; &lt;!-- Flexbox Cluster: row --&gt;
    &lt;div class=&quot;inner&quot;&gt;
        &lt;div class=&quot;flex-cluster&quot;&gt;
            &lt;div class=&quot;row&quot;&gt;
                &lt;p class=&quot;flex-content&quot;&gt;Lorem ipsum dolor sit amet.&lt;/p&gt;
                &lt;p class=&quot;flex-content&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
                tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
                quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
                consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
                cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
                proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/article&gt;
</code></pre><p>The flow of information can look a bit confusing, but it will make more sense when you look at the CSS:</p><pre><code class=lang-css>/**
 * BONUS - Flexbox Clusters
 *
 * Any good masonry layout includes this to some degree. Why?
 * - To break the flow and have content stand out.
 *
 * Again, everything within this that is cosmetic will be marked as such.
 */
.flex-cluster,
.flex-cluster .flex-content {
    display:-webkit-flex;
    display:-moz-flex;
    display:-ms-flex;
    display:flex;
}

.flex-cluster .column {
    -webkit-flex-direction:column;
    -moz-flex-direction:column;
    flex-direction:column;
}
.flex-cluster .column p { margin-top:0 !important; }
.flex-cluster .column p:first-child { margin-top:0.25rem !important; }

.flex-cluster .row {
    -webkit-flex-direction:row;
    -moz-flex-direction:row;
    flex-direction:row;
}

.flex-cluster .flex-content { flex:1 1 auto; }
.flex-cluster .flex-content.half.column { flex:1 1 50%; }
.flex-cluster .flex-content.half.column:first-child { margin-right:0.25rem; }
</code></pre><p>Now you can play around with different combinations of the clusters and get really interesting flows going. Trying using this to your advantage!</p><p>This is all the necessary CSS to make the clusters work properly. Flexbox makes it incredibly easy to style a whole slew of elements without having to hack together uniform styles. Essentially, the clusters consume the entire space of their element, then give their largest child element priority, then split the remaining space evenly amongst the rest while trying to conform to the largest child&#39;s dimensions. I highly recommend reading the above mentioned articles to get a better understanding of Flexbox!</p><h6 id=conclusion->Conclusion:</h6><p>To sum everything up, we basically mocked the style of any newspaper columns and provided our style twist. This can provide efficient information to your users while keeping your stylesheet fairly small. If it doesn&#39;t work, or you have some questions, just ask!</p></div><footer><nav id=footer-nav><ul><li><a href=../../ >⌂</a></li><li><a href=../../tutorials/ >Tutorials</a></li><li><a href=http://codepen.io/MirrorBytes/ >My CodePen</a></li><li><a href=https://github.com/MirrorBytes>My GitHub</a></li></ul></nav><div class=copyright>&copy;2016 MirrorBytes | All Rights Reserved</div></footer></main><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/page.js/1.7.1/page.min.js></script><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/axios/0.14.0/axios.min.js></script><script type=text/javascript src=../../js/shared.js></script><script type=text/javascript src=../../js/bundle.js></script></body></html>]]></description><link>http://127.0.0.1/tutorials/pure-css3-masonry-layout</link><guid isPermaLink="true">http://127.0.0.1/tutorials/pure-css3-masonry-layout</guid><pubDate>Tue, 06 Sep 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Pure CSS3 Parallax Header]]></title><description><![CDATA[<!DOCTYPE html><html lang=en><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><meta http-equiv=x-ua-compatible content="ie=edge"><title>Pure CSS3 Parallax Header - Portfolio</title><link rel=icon href="data:;base64,iVBORw0KGgo="><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/pace/1.0.2/pace.min.js></script><style type=text/css>.pace{-webkit-pointer-events:none;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none}.pace-inactive{display:none}.pace .pace-progress{width:100%;height:2px;top:0;right:100%;z-index:2000;position:fixed;background-color:#6495ed}</style><link rel=stylesheet type=text/css href=https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.min.css><link rel=stylesheet href=../../css/style.css></head><body><main id=app><input id=main-nav-toggle type=checkbox><label for=main-nav-toggle><span></span></label><nav id=main-nav><ul><li><a href=../../ >⌂</a></li><li><a href=../../tutorials/ class=active>Tutorials</a></li><li><a href=http://codepen.io/MirrorBytes/ >My CodePen</a></li><li><a href=https://github.com/MirrorBytes>My GitHub</a></li></ul></nav><div id=content><h3>Pure CSS3 Parallax Header</h3><div id=media><img class=ratio src=https://placehold.it/16x9><iframe src=https://www.youtube.com/embed/ygD2QgGS3u0 frameborder=0 allowfullscreen></iframe></div><p class=drop-cap>Just to explain this tutorial a bit more in detail, I&#39;m writing it up. An interesting fact, the collection of this knowledge is actually quite simplistic; the math behind it is quite complicated without proper representation though.</p><p>There are dozens of articles that explain the math, and all of them make valid points. I would highly recommend checking some out! Just search it up on Google, and you&#39;ll find a remarkable amount of research in this single area! Considering this is untamed territory of browsers, there are quite a number of bugs; I mention the ones relevant to this particular project, and the proper fixes. It may seem a bit confusing at first, until you realize that not even the browser is properly calculating the values. In the future, I am hoping there will be a solid fix to each one of these bugs, but until then we shall manage. I bet you now feel a little bit more comfortable with this just by me saying that, so let&#39;s move on. Here are the pages I referenced while making this tutorial:</p><ul><li><a href=http://keithclark.co.uk/articles/pure-css-parallax-websites/ >Keith Clark&#39;s Pure CSS Parallax Websites</a></li><li><a href=http://keithclark.co.uk/articles/practical-css-parallax/ >Keith Clark&#39;s Practical CSS Parallax</a></li></ul><p>Time to move into the actual tutorial!</p><hr><p>For those of you that had not watched the video, or cannot, I shall state that the finished product of this tutorial is ready for production-level projects. It has an incredibly smooth animation that does not hinder performance in the slightest, and it will not induce any migraines!</p><h6 id=dependency->Dependency:</h6><ul><li><a href=https://necolas.github.io/normalize.css/ >Normalize</a></li></ul><h6 id=my-html5-setup->My HTML5 Setup:</h6><pre><code class=lang-html>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
        &lt;meta charset=&quot;UTF-8&quot; /&gt;
        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;
        &lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot; /&gt;

        &lt;title&gt;&lt;/title&gt;

        &lt;link rel=&quot;icon&quot; href=&quot;data:;base64,iVBORw0KGgo=&quot; /&gt;
    &lt;/head&gt;

    &lt;body&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre><h6 id=basic-css->Basic CSS:</h6><pre><code class=lang-css>&lt;style type=&quot;text/css&quot;&gt;
    *,
    *::before,
    *::after {
        -webkit-box-sizing:border-box;
        -moz-box-sizing:border-box;
        box-sizing:border-box;
    }

    html,
    body,
    body &gt; header,
    body &gt; section {
        height:100vh;

        position:relative;
    }

    * {
        margin:0;
        padding:0;
    }

    html { overflow:hidden; }
    body {
        overflow-x:hidden;
        overflow-y:auto;
    }
&lt;/style&gt;
</code></pre><p>First, throw that into the head. Second, I use this CSS setup in nearly every one of my projects. Without this setup, I have found that html and body don&#39;t play nicely together in several situations, considering html likes to do its own thing with overflow. This next helper class is one I use for easier manipulation of images:</p><pre><code class=lang-css>.background-image {
    width:102%;
    height:100%;

    background-size:100%;
    background-repeat:no-repeat;
    background-position:center;

    top:0;
    left:0;
    right:0;
    bottom:0;
    z-index:-1;
    position:absolute;

    -webkit-pointer-events:none;
    -moz-pointer-events:none;
    pointer-events:none;
}
</code></pre><h6 id=testing-markup->Testing Markup:</h6><pre><code class=lang-html>&lt;header&gt;
    &lt;div class=&quot;background-image&quot;&gt;&lt;/div&gt;
    &lt;div&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;
&lt;/header&gt;
&lt;section&gt;
    &lt;div&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
        cillum dolore eu fugiat nulla pariatur.&lt;/p&gt;
    &lt;/div&gt;
&lt;/section&gt;
</code></pre><p>This is fairly straight forward. Throw this into the body and look over the remaining CSS.</p><h6 id=parallax-css->Parallax CSS:</h6><p>Now that all of the preliminary CSS is there, we can move onto fun stuff.</p><pre><code class=lang-css>/**
 * Remember scale = 1 + (translateZ * -1) / perspective.
 * Set z-index:-1; to parallax background.
 * ----------------------------------------------------------
 * Set z-index:1; to all remaining groups that are not using parallax.
 */

@supports ((perspective: 1px) and (not (-webkit-overflow-scrolling: touch))) {
    body {
        -webkit-perspective:1px;
        -moz-perspective:1px;
        perspective:1px;

        perspective-origin:100%; // part 1 of a 2 part fix for Webkit browsers. Corrects bug in calculation of width.

        transform:translateZ(0); // fixes a bug in Edge browser, prevents error in rendering webpage.

        -webkit-transform-style:preserve-3d;
        -moz-transform-style:preserve-3d;
        transform-style:preserve-3d;
    }

    body &gt; header { // this is a fix for Mozilla, as their definition of inherit is different.
        -moz-transform-style:inherit;
        transform-style:inherit;
    }
    body &gt; header .background-image {
        transform:translateZ(-1px) scale(2); // scale = 1 + (translateZ * -1) / perspective

        transform-origin:100%; // part 2 of fix for Webkit browsers.

        background-image:url(./src/images/background.jpg);
    }

    body &gt; section { z-index:1; }
}
</code></pre><p>Perspective is the distance, in pixels, a 3D element is placed from the view. A perspective of 1px is all that is required here, I never really used a higher one. Anything placed on the z-axis higher than its parent&#39;s perspective will not be rendered. Setting our transform-style to preserve-3d ensures the children of this element will be in a 3D space. The parallax element is placed further back on the z-axis, and is scaled to its original perceived size. For this, we need to use the calculation I have commented in the above code. Essentially with a 1px perspective, you only need to remember scale = 1 + -(translateZ). Finally, I have added the bug fixes in the comments of the code above. There are several, all of which have simple fixes.</p><h6 id=conclusion->Conclusion:</h6><p>If it isn&#39;t already obvious, we&#39;ve built a single moving element that has been placed in a 3D space, pushed it back and scaled it to its original perceived size. If it doesn&#39;t work, or you have some questions, just ask!</p></div><footer><nav id=footer-nav><ul><li><a href=../../ >⌂</a></li><li><a href=../../tutorials/ >Tutorials</a></li><li><a href=http://codepen.io/MirrorBytes/ >My CodePen</a></li><li><a href=https://github.com/MirrorBytes>My GitHub</a></li></ul></nav><div class=copyright>&copy;2016 MirrorBytes | All Rights Reserved</div></footer></main><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/page.js/1.7.1/page.min.js></script><script type=text/javascript src=https://cdnjs.cloudflare.com/ajax/libs/axios/0.14.0/axios.min.js></script><script type=text/javascript src=../../js/shared.js></script><script type=text/javascript src=../../js/bundle.js></script></body></html>]]></description><link>http://127.0.0.1/tutorials/pure-css3-parallax-header</link><guid isPermaLink="true">http://127.0.0.1/tutorials/pure-css3-parallax-header</guid><pubDate>Wed, 31 Aug 2016 00:00:00 GMT</pubDate></item></channel></rss>